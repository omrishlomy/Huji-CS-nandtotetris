// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux(in = load, sel = address[2], a =low , b =up );
    DMux(in = up, sel = address[1], a =uplow , b =upup );
    DMux(in = upup, sel = address[0], a =upuplow , b =upupup );
    DMux(in = uplow, sel = address[0], a =uplowlow , b =uplowup );
    DMux(in = low, sel = address[1], a =lowlow , b =lowup );
    DMux(in = lowlow, sel = address[0], a =lowlowlow , b =lowlowup );
    DMux(in = lowup, sel = address[0], a =lowuplow , b =lowupup );
    Register(in=in,load=upupup,out=out1);
    Register(in=in,load=upuplow,out=out2);
    Register(in=in,load=uplowup,out=out3);
    Register(in=in,load=uplowlow,out=out4);
    Register(in=in,load=lowupup,out=out5);
    Register(in=in,load=lowuplow,out=out6);
    Register(in=in,load=lowlowup,out=out7);
    Register(in=in,load=lowlowlow,out=out8);
    Mux8Way16(a = out8, b = out7, c = out6, d = out5, e = out4, f =out3 , g = out2, h = out1, sel =address, out =out );
}